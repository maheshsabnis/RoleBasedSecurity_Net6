@page "/registeruser"
@using SharedModels.Models
@inject Blazor_ClientApp.ClientCaller.SecurityProxy securityProxy;

<h3>Register New User</h3>
<EditForm Model="@registerUser" OnValidSubmit="@Register">
    <div class="container">
        <div class="form-group">
            <label>User Name</label>
            <InputText class="form-control" @bind-Value="@registerUser.Email"></InputText>
        </div>

         <div class="form-group">
            <label>Password</label>
            <InputText type="Password" class="form-control" @bind-Value="@registerUser.Password"></InputText>
        </div>

          <div class="form-group">
            <label>Confirm Password</label>
            <InputText type="Password" class="form-control" @bind-Value="@registerUser.ConfirmPassword"></InputText>
        </div>

        <div class="btn-group">
            <input type="submit" class="btn btn-success" />
            <input type="reset" class="btn btn-warning" />
        </div>
        <hr/>
        <div class="container">
            <strong>
                @status
            </strong>
        </div>
    </div>
</EditForm>
@code {
    private RegisterUser? registerUser;
    private string? status = String.Empty;

    protected override Task OnInitializedAsync()
    {
        registerUser = new RegisterUser();  
        return base.OnInitializedAsync();
    }


    private async Task Register()
    {
        try
        {
            var response = await securityProxy.RegisterUserAsync(registerUser);
            status = response.Message;
        } 
        catch (Exception ex)
        {
            status = ex.Message;
        }
    }

}
